Следующая процедура вычисляет математическую функцию, называемую функцией Аккермана.
(define (A x y)
(cond ((= y 0) 0)
((= x 0) (* 2 y))
((= y 1) 2)
(else (A (- x 1)
(A x (- y 1))))))
Каковы значения следующих выражений?
(A 1 10)
(A 2 4)
(A 3 3)

(A 1 10) - return 1024
(A 0 (A 1 9)) - return 2 * 512
(A 0 (A 1 8)) - return 2 * 128
(A 0 (A 1 7)) - return 2 * 64
(A 0 (A 1 6)) - return 2 * 32
(A 0 (A 1 5)) - return 2 * 16
(A 0 (A 1 4)) - return 2 * 8
(A 0 (A 1 3)) - return 2 * 4
(A 0 (A 1 2)) - return 2 * 2
(A 0 (A 1 1)) - return 2

(A 2 4)
(A 1 (A 2 3)) - (A 1 16) = 2^16 = 65536
	(A 1 (A 2 2)) => (A 1 4) - 16
		(A 1 (A 2 1))
		(A 0 2) - return 4

(A 3 3)
(A 2 (A 3 2)) => (A 2 4) = 65536
	(A 2 (A 3 1)) => (A 2 2) return 4

(define (f n) (A 0 n)) вернет 2n
(define (g n) (A 1 n)) вернет 2^n
(define (k n) (* 5 n n)) вернет 5 * (square n)

